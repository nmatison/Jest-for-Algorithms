const DynamicProgramming = require('../lib/dynamic_programming');

describe('Super Frog Hops', () => {
  let dp = new DynamicProgramming();

  let ans1 = [[1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 2], [1, 1, 1, 2, 1], [1, 1, 1, 3], [1, 1, 2, 1, 1], [1, 1, 2, 2], [1, 1, 3, 1], [1, 1, 4], [1, 2, 1, 1, 1], [1, 2, 1, 2], [1, 2, 2, 1], [1, 2, 3], [1, 3, 1, 1], [1, 3, 2], [1, 4, 1], [2, 1, 1, 1, 1], [2, 1, 1, 2], [2, 1, 2, 1], [2, 1, 3], [2, 2, 1, 1], [2, 2, 2], [2, 3, 1], [2, 4], [3, 1, 1, 1], [3, 1, 2], [3, 2, 1], [3, 3], [4, 1, 1], [4, 2]];
  let ans2 = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 2], [1, 1, 1, 1, 1, 1, 1, 2, 1], [1, 1, 1, 1, 1, 1, 1, 3], [1, 1, 1, 1, 1, 1, 2, 1, 1], [1, 1, 1, 1, 1, 1, 2, 2], [1, 1, 1, 1, 1, 1, 3, 1], [1, 1, 1, 1, 1, 1, 4], [1, 1, 1, 1, 1, 2, 1, 1, 1], [1, 1, 1, 1, 1, 2, 1, 2], [1, 1, 1, 1, 1, 2, 2, 1], [1, 1, 1, 1, 1, 2, 3], [1, 1, 1, 1, 1, 3, 1, 1], [1, 1, 1, 1, 1, 3, 2], [1, 1, 1, 1, 1, 4, 1], [1, 1, 1, 1, 2, 1, 1, 1, 1], [1, 1, 1, 1, 2, 1, 1, 2], [1, 1, 1, 1, 2, 1, 2, 1], [1, 1, 1, 1, 2, 1, 3], [1, 1, 1, 1, 2, 2, 1, 1], [1, 1, 1, 1, 2, 2, 2], [1, 1, 1, 1, 2, 3, 1], [1, 1, 1, 1, 2, 4], [1, 1, 1, 1, 3, 1, 1, 1], [1, 1, 1, 1, 3, 1, 2], [1, 1, 1, 1, 3, 2, 1], [1, 1, 1, 1, 3, 3], [1, 1, 1, 1, 4, 1, 1], [1, 1, 1, 1, 4, 2], [1, 1, 1, 2, 1, 1, 1, 1, 1], [1, 1, 1, 2, 1, 1, 1, 2], [1, 1, 1, 2, 1, 1, 2, 1], [1, 1, 1, 2, 1, 1, 3], [1, 1, 1, 2, 1, 2, 1, 1], [1, 1, 1, 2, 1, 2, 2], [1, 1, 1, 2, 1, 3, 1], [1, 1, 1, 2, 1, 4], [1, 1, 1, 2, 2, 1, 1, 1], [1, 1, 1, 2, 2, 1, 2], [1, 1, 1, 2, 2, 2, 1], [1, 1, 1, 2, 2, 3], [1, 1, 1, 2, 3, 1, 1], [1, 1, 1, 2, 3, 2], [1, 1, 1, 2, 4, 1], [1, 1, 1, 3, 1, 1, 1, 1], [1, 1, 1, 3, 1, 1, 2], [1, 1, 1, 3, 1, 2, 1], [1, 1, 1, 3, 1, 3], [1, 1, 1, 3, 2, 1, 1], [1, 1, 1, 3, 2, 2], [1, 1, 1, 3, 3, 1], [1, 1, 1, 3, 4], [1, 1, 1, 4, 1, 1, 1], [1, 1, 1, 4, 1, 2], [1, 1, 1, 4, 2, 1], [1, 1, 1, 4, 3], [1, 1, 2, 1, 1, 1, 1, 1, 1], [1, 1, 2, 1, 1, 1, 1, 2], [1, 1, 2, 1, 1, 1, 2, 1], [1, 1, 2, 1, 1, 1, 3], [1, 1, 2, 1, 1, 2, 1, 1], [1, 1, 2, 1, 1, 2, 2], [1, 1, 2, 1, 1, 3, 1], [1, 1, 2, 1, 1, 4], [1, 1, 2, 1, 2, 1, 1, 1], [1, 1, 2, 1, 2, 1, 2], [1, 1, 2, 1, 2, 2, 1], [1, 1, 2, 1, 2, 3], [1, 1, 2, 1, 3, 1, 1], [1, 1, 2, 1, 3, 2], [1, 1, 2, 1, 4, 1], [1, 1, 2, 2, 1, 1, 1, 1], [1, 1, 2, 2, 1, 1, 2], [1, 1, 2, 2, 1, 2, 1], [1, 1, 2, 2, 1, 3], [1, 1, 2, 2, 2, 1, 1], [1, 1, 2, 2, 2, 2], [1, 1, 2, 2, 3, 1], [1, 1, 2, 2, 4], [1, 1, 2, 3, 1, 1, 1], [1, 1, 2, 3, 1, 2], [1, 1, 2, 3, 2, 1], [1, 1, 2, 3, 3], [1, 1, 2, 4, 1, 1], [1, 1, 2, 4, 2], [1, 1, 3, 1, 1, 1, 1, 1], [1, 1, 3, 1, 1, 1, 2], [1, 1, 3, 1, 1, 2, 1], [1, 1, 3, 1, 1, 3], [1, 1, 3, 1, 2, 1, 1], [1, 1, 3, 1, 2, 2], [1, 1, 3, 1, 3, 1], [1, 1, 3, 1, 4], [1, 1, 3, 2, 1, 1, 1], [1, 1, 3, 2, 1, 2], [1, 1, 3, 2, 2, 1], [1, 1, 3, 2, 3], [1, 1, 3, 3, 1, 1], [1, 1, 3, 3, 2], [1, 1, 3, 4, 1], [1, 1, 4, 1, 1, 1, 1], [1, 1, 4, 1, 1, 2], [1, 1, 4, 1, 2, 1], [1, 1, 4, 1, 3], [1, 1, 4, 2, 1, 1], [1, 1, 4, 2, 2], [1, 1, 4, 3, 1], [1, 1, 4, 4], [1, 2, 1, 1, 1, 1, 1, 1, 1], [1, 2, 1, 1, 1, 1, 1, 2], [1, 2, 1, 1, 1, 1, 2, 1], [1, 2, 1, 1, 1, 1, 3], [1, 2, 1, 1, 1, 2, 1, 1], [1, 2, 1, 1, 1, 2, 2], [1, 2, 1, 1, 1, 3, 1], [1, 2, 1, 1, 1, 4], [1, 2, 1, 1, 2, 1, 1, 1], [1, 2, 1, 1, 2, 1, 2], [1, 2, 1, 1, 2, 2, 1], [1, 2, 1, 1, 2, 3], [1, 2, 1, 1, 3, 1, 1], [1, 2, 1, 1, 3, 2], [1, 2, 1, 1, 4, 1], [1, 2, 1, 2, 1, 1, 1, 1], [1, 2, 1, 2, 1, 1, 2], [1, 2, 1, 2, 1, 2, 1], [1, 2, 1, 2, 1, 3], [1, 2, 1, 2, 2, 1, 1], [1, 2, 1, 2, 2, 2], [1, 2, 1, 2, 3, 1], [1, 2, 1, 2, 4], [1, 2, 1, 3, 1, 1, 1], [1, 2, 1, 3, 1, 2], [1, 2, 1, 3, 2, 1], [1, 2, 1, 3, 3], [1, 2, 1, 4, 1, 1], [1, 2, 1, 4, 2], [1, 2, 2, 1, 1, 1, 1, 1], [1, 2, 2, 1, 1, 1, 2], [1, 2, 2, 1, 1, 2, 1], [1, 2, 2, 1, 1, 3], [1, 2, 2, 1, 2, 1, 1], [1, 2, 2, 1, 2, 2], [1, 2, 2, 1, 3, 1], [1, 2, 2, 1, 4], [1, 2, 2, 2, 1, 1, 1], [1, 2, 2, 2, 1, 2], [1, 2, 2, 2, 2, 1], [1, 2, 2, 2, 3], [1, 2, 2, 3, 1, 1], [1, 2, 2, 3, 2], [1, 2, 2, 4, 1], [1, 2, 3, 1, 1, 1, 1], [1, 2, 3, 1, 1, 2], [1, 2, 3, 1, 2, 1], [1, 2, 3, 1, 3], [1, 2, 3, 2, 1, 1], [1, 2, 3, 2, 2], [1, 2, 3, 3, 1], [1, 2, 3, 4], [1, 2, 4, 1, 1, 1], [1, 2, 4, 1, 2], [1, 2, 4, 2, 1], [1, 2, 4, 3], [1, 3, 1, 1, 1, 1, 1, 1], [1, 3, 1, 1, 1, 1, 2], [1, 3, 1, 1, 1, 2, 1], [1, 3, 1, 1, 1, 3], [1, 3, 1, 1, 2, 1, 1], [1, 3, 1, 1, 2, 2], [1, 3, 1, 1, 3, 1], [1, 3, 1, 1, 4], [1, 3, 1, 2, 1, 1, 1], [1, 3, 1, 2, 1, 2], [1, 3, 1, 2, 2, 1], [1, 3, 1, 2, 3], [1, 3, 1, 3, 1, 1], [1, 3, 1, 3, 2], [1, 3, 1, 4, 1], [1, 3, 2, 1, 1, 1, 1], [1, 3, 2, 1, 1, 2], [1, 3, 2, 1, 2, 1], [1, 3, 2, 1, 3], [1, 3, 2, 2, 1, 1], [1, 3, 2, 2, 2], [1, 3, 2, 3, 1], [1, 3, 2, 4], [1, 3, 3, 1, 1, 1], [1, 3, 3, 1, 2], [1, 3, 3, 2, 1], [1, 3, 3, 3], [1, 3, 4, 1, 1], [1, 3, 4, 2], [1, 4, 1, 1, 1, 1, 1], [1, 4, 1, 1, 1, 2], [1, 4, 1, 1, 2, 1], [1, 4, 1, 1, 3], [1, 4, 1, 2, 1, 1], [1, 4, 1, 2, 2], [1, 4, 1, 3, 1], [1, 4, 1, 4], [1, 4, 2, 1, 1, 1], [1, 4, 2, 1, 2], [1, 4, 2, 2, 1], [1, 4, 2, 3], [1, 4, 3, 1, 1], [1, 4, 3, 2], [1, 4, 4, 1], [2, 1, 1, 1, 1, 1, 1, 1, 1], [2, 1, 1, 1, 1, 1, 1, 2], [2, 1, 1, 1, 1, 1, 2, 1], [2, 1, 1, 1, 1, 1, 3], [2, 1, 1, 1, 1, 2, 1, 1], [2, 1, 1, 1, 1, 2, 2], [2, 1, 1, 1, 1, 3, 1], [2, 1, 1, 1, 1, 4], [2, 1, 1, 1, 2, 1, 1, 1], [2, 1, 1, 1, 2, 1, 2], [2, 1, 1, 1, 2, 2, 1], [2, 1, 1, 1, 2, 3], [2, 1, 1, 1, 3, 1, 1], [2, 1, 1, 1, 3, 2], [2, 1, 1, 1, 4, 1], [2, 1, 1, 2, 1, 1, 1, 1], [2, 1, 1, 2, 1, 1, 2], [2, 1, 1, 2, 1, 2, 1], [2, 1, 1, 2, 1, 3], [2, 1, 1, 2, 2, 1, 1], [2, 1, 1, 2, 2, 2], [2, 1, 1, 2, 3, 1], [2, 1, 1, 2, 4], [2, 1, 1, 3, 1, 1, 1], [2, 1, 1, 3, 1, 2], [2, 1, 1, 3, 2, 1], [2, 1, 1, 3, 3], [2, 1, 1, 4, 1, 1], [2, 1, 1, 4, 2], [2, 1, 2, 1, 1, 1, 1, 1], [2, 1, 2, 1, 1, 1, 2], [2, 1, 2, 1, 1, 2, 1], [2, 1, 2, 1, 1, 3], [2, 1, 2, 1, 2, 1, 1], [2, 1, 2, 1, 2, 2], [2, 1, 2, 1, 3, 1], [2, 1, 2, 1, 4], [2, 1, 2, 2, 1, 1, 1], [2, 1, 2, 2, 1, 2], [2, 1, 2, 2, 2, 1], [2, 1, 2, 2, 3], [2, 1, 2, 3, 1, 1], [2, 1, 2, 3, 2], [2, 1, 2, 4, 1], [2, 1, 3, 1, 1, 1, 1], [2, 1, 3, 1, 1, 2], [2, 1, 3, 1, 2, 1], [2, 1, 3, 1, 3], [2, 1, 3, 2, 1, 1], [2, 1, 3, 2, 2], [2, 1, 3, 3, 1], [2, 1, 3, 4], [2, 1, 4, 1, 1, 1], [2, 1, 4, 1, 2], [2, 1, 4, 2, 1], [2, 1, 4, 3], [2, 2, 1, 1, 1, 1, 1, 1], [2, 2, 1, 1, 1, 1, 2], [2, 2, 1, 1, 1, 2, 1], [2, 2, 1, 1, 1, 3], [2, 2, 1, 1, 2, 1, 1], [2, 2, 1, 1, 2, 2], [2, 2, 1, 1, 3, 1], [2, 2, 1, 1, 4], [2, 2, 1, 2, 1, 1, 1], [2, 2, 1, 2, 1, 2], [2, 2, 1, 2, 2, 1], [2, 2, 1, 2, 3], [2, 2, 1, 3, 1, 1], [2, 2, 1, 3, 2], [2, 2, 1, 4, 1], [2, 2, 2, 1, 1, 1, 1], [2, 2, 2, 1, 1, 2], [2, 2, 2, 1, 2, 1], [2, 2, 2, 1, 3], [2, 2, 2, 2, 1, 1], [2, 2, 2, 2, 2], [2, 2, 2, 3, 1], [2, 2, 2, 4], [2, 2, 3, 1, 1, 1], [2, 2, 3, 1, 2], [2, 2, 3, 2, 1], [2, 2, 3, 3], [2, 2, 4, 1, 1], [2, 2, 4, 2], [2, 3, 1, 1, 1, 1, 1], [2, 3, 1, 1, 1, 2], [2, 3, 1, 1, 2, 1], [2, 3, 1, 1, 3], [2, 3, 1, 2, 1, 1], [2, 3, 1, 2, 2], [2, 3, 1, 3, 1], [2, 3, 1, 4], [2, 3, 2, 1, 1, 1], [2, 3, 2, 1, 2], [2, 3, 2, 2, 1], [2, 3, 2, 3], [2, 3, 3, 1, 1], [2, 3, 3, 2], [2, 3, 4, 1], [2, 4, 1, 1, 1, 1], [2, 4, 1, 1, 2], [2, 4, 1, 2, 1], [2, 4, 1, 3], [2, 4, 2, 1, 1], [2, 4, 2, 2], [2, 4, 3, 1], [2, 4, 4], [3, 1, 1, 1, 1, 1, 1, 1], [3, 1, 1, 1, 1, 1, 2], [3, 1, 1, 1, 1, 2, 1], [3, 1, 1, 1, 1, 3], [3, 1, 1, 1, 2, 1, 1], [3, 1, 1, 1, 2, 2], [3, 1, 1, 1, 3, 1], [3, 1, 1, 1, 4], [3, 1, 1, 2, 1, 1, 1], [3, 1, 1, 2, 1, 2], [3, 1, 1, 2, 2, 1], [3, 1, 1, 2, 3], [3, 1, 1, 3, 1, 1], [3, 1, 1, 3, 2], [3, 1, 1, 4, 1], [3, 1, 2, 1, 1, 1, 1], [3, 1, 2, 1, 1, 2], [3, 1, 2, 1, 2, 1], [3, 1, 2, 1, 3], [3, 1, 2, 2, 1, 1], [3, 1, 2, 2, 2], [3, 1, 2, 3, 1], [3, 1, 2, 4], [3, 1, 3, 1, 1, 1], [3, 1, 3, 1, 2], [3, 1, 3, 2, 1], [3, 1, 3, 3], [3, 1, 4, 1, 1], [3, 1, 4, 2], [3, 2, 1, 1, 1, 1, 1], [3, 2, 1, 1, 1, 2], [3, 2, 1, 1, 2, 1], [3, 2, 1, 1, 3], [3, 2, 1, 2, 1, 1], [3, 2, 1, 2, 2], [3, 2, 1, 3, 1], [3, 2, 1, 4], [3, 2, 2, 1, 1, 1], [3, 2, 2, 1, 2], [3, 2, 2, 2, 1], [3, 2, 2, 3], [3, 2, 3, 1, 1], [3, 2, 3, 2], [3, 2, 4, 1], [3, 3, 1, 1, 1, 1], [3, 3, 1, 1, 2], [3, 3, 1, 2, 1], [3, 3, 1, 3], [3, 3, 2, 1, 1], [3, 3, 2, 2], [3, 3, 3, 1], [3, 3, 4], [3, 4, 1, 1, 1], [3, 4, 1, 2], [3, 4, 2, 1], [3, 4, 3], [4, 1, 1, 1, 1, 1, 1], [4, 1, 1, 1, 1, 2], [4, 1, 1, 1, 2, 1], [4, 1, 1, 1, 3], [4, 1, 1, 2, 1, 1], [4, 1, 1, 2, 2], [4, 1, 1, 3, 1], [4, 1, 1, 4], [4, 1, 2, 1, 1, 1], [4, 1, 2, 1, 2], [4, 1, 2, 2, 1], [4, 1, 2, 3], [4, 1, 3, 1, 1], [4, 1, 3, 2], [4, 1, 4, 1], [4, 2, 1, 1, 1, 1], [4, 2, 1, 1, 2], [4, 2, 1, 2, 1], [4, 2, 1, 3], [4, 2, 2, 1, 1], [4, 2, 2, 2], [4, 2, 3, 1], [4, 2, 4], [4, 3, 1, 1, 1], [4, 3, 1, 2], [4, 3, 2, 1], [4, 3, 3], [4, 4, 1, 1], [4, 4, 2]];

  test('it handles base cases', () => {
    expect(dp.superFrogHops(1, 1)).toEqual([[1]]);
    expect(dp.superFrogHops(2, 1)).toEqual([[1, 1]]);
    expect(dp.superFrogHops(2, 2).sort()).toEqual([[1, 1], [2]]);
  });

  test('it handles cases where k < n', () => {
    expect(dp.superFrogHops(6, 4).sort()).toEqual(ans1);
    expect(dp.superFrogHops(10, 4)).toEqual(ans2);
  });

  test('it handles cases where n > k', () => {
    expect(dp.superFrogHops(2, 5).sort()).toEqual([[1, 1], [2]]);
    expect(dp.superFrogHops(3, 10)).toEqual([[1, 1, 1], [1, 2], [2, 1], [3]]);
  });

  test('it runs in non-exponential time', () => {
    var start = new Date().getTime();
    dp.superFrogHops(10, 10);
    var end = new Date().getTime();
    var time = end - start;

    expect(time).toBeLessThan(100);
  });
});